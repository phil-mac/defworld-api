{
  "version": 3,
  "sources": ["../../entities/node.ts"],
  "sourcesContent": ["import { DataTypes } from 'sequelize';\nimport { withFilter } from 'graphql-subscriptions';\nconst interpreterService = require('../services/interpreterService');\n\nconst typeDefs = `\n  type Query {\n    node(id: ID!): Node!\n  }\n\n  type Mutation {\n    createNode(worldId: ID!, pos: [Int!]!): Node!\n  }\n\n  type Node {\n    id: ID!\n    content: String!\n    pos: [Int!]!\n  }\n`;\n\nconst define = sequelize => sequelize.define('node', {\n  content: {\n    type: DataTypes.STRING(4096),\n    allowNull: false,\n    defaultValue: ''\n  },\n  pos: {\n    type: DataTypes.ARRAY(DataTypes.INTEGER),\n    allowNull: false\n  }\n});\n\nconst resolvers = (models) => ({\n  Query: {\n    node: async (parent: any, args: any) => {\n      const { id } = args;\n      return await models.node.findOne({ where: { id } });\n    },\n  },\n  Mutation: {\n    createNode: async (parent: any, args: any) => {\n      const { worldId, pos } = args;\n      const scriptNode = await models.node.create({ worldId, pos });\n      \n      return scriptNode.toJSON();\n    },\n  },\n});\n\nmodule.exports = { typeDefs, define, resolvers }"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,uBAA0B;AAE1B,MAAM,qBAAqB,QAAQ;AAEnC,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBjB,MAAM,SAAS,eAAa,UAAU,OAAO,QAAQ;AAAA,EACnD,SAAS;AAAA,IACP,MAAM,2BAAU,OAAO;AAAA,IACvB,WAAW;AAAA,IACX,cAAc;AAAA;AAAA,EAEhB,KAAK;AAAA,IACH,MAAM,2BAAU,MAAM,2BAAU;AAAA,IAChC,WAAW;AAAA;AAAA;AAIf,MAAM,YAAY,CAAC,WAAY;AAAA,EAC7B,OAAO;AAAA,IACL,MAAM,OAAO,QAAa,SAAc;AACtC,YAAM,EAAE,OAAO;AACf,aAAO,MAAM,OAAO,KAAK,QAAQ,EAAE,OAAO,EAAE;AAAA;AAAA;AAAA,EAGhD,UAAU;AAAA,IACR,YAAY,OAAO,QAAa,SAAc;AAC5C,YAAM,EAAE,SAAS,QAAQ;AACzB,YAAM,aAAa,MAAM,OAAO,KAAK,OAAO,EAAE,SAAS;AAEvD,aAAO,WAAW;AAAA;AAAA;AAAA;AAKxB,OAAO,UAAU,EAAE,UAAU,QAAQ;",
  "names": []
}
