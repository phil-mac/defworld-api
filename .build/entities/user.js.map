{
  "version": 3,
  "sources": ["../../entities/user.ts"],
  "sourcesContent": ["import { DataTypes } from 'sequelize';\n\nconst typeDefs = `\n  type Query {\n    user(id: ID!): User!\n    users: [User!]!\n  }\n\n  type Mutation {\n    createUser(username: String!): User!\n  }\n\n  type User {\n    id: ID!\n    username: String!\n    worldUsers: [WorldUser!]!\n  }\n`;\n\n\nconst define = sequelize => sequelize.define('user', {\n  username: {\n    type: DataTypes.STRING,\n    allowNull: false\n  },\n}, {});\n\nconst resolvers = models => ({\n  Query: {\n    user: async (parent: any, args: any) => {\n      const { id } = args;\n      return await models.user.findOne({ where: { id } });\n    },\n    users: async () => {\n      return await models.user.findAll();\n    },\n  },\n  Mutation: {\n    createUser: async (parent: any, args: any) => {\n      const { username } = args;\n      const existingUser = await models.user.findOne({ where: { username }});\n      if (!!existingUser){\n        return existingUser.toJSON();\n      } else {\n        const user = await models.user.create({ username });\n        return user.toJSON();\n      } \n    },\n  },\n  User: {\n    worldUsers: async (user: any) => {\n      return await models.worldUser.findAll({ where: { userId: user.id }});\n    },\n  },\n});\n\n\nmodule.exports = { typeDefs, define, resolvers };"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,uBAA0B;AAE1B,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBjB,MAAM,SAAS,eAAa,UAAU,OAAO,QAAQ;AAAA,EACnD,UAAU;AAAA,IACR,MAAM,2BAAU;AAAA,IAChB,WAAW;AAAA;AAAA,GAEZ;AAEH,MAAM,YAAY,YAAW;AAAA,EAC3B,OAAO;AAAA,IACL,MAAM,OAAO,QAAa,SAAc;AACtC,YAAM,EAAE,OAAO;AACf,aAAO,MAAM,OAAO,KAAK,QAAQ,EAAE,OAAO,EAAE;AAAA;AAAA,IAE9C,OAAO,YAAY;AACjB,aAAO,MAAM,OAAO,KAAK;AAAA;AAAA;AAAA,EAG7B,UAAU;AAAA,IACR,YAAY,OAAO,QAAa,SAAc;AAC5C,YAAM,EAAE,aAAa;AACrB,YAAM,eAAe,MAAM,OAAO,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC1D,UAAI,CAAC,CAAC,cAAa;AACjB,eAAO,aAAa;AAAA,aACf;AACL,cAAM,OAAO,MAAM,OAAO,KAAK,OAAO,EAAE;AACxC,eAAO,KAAK;AAAA;AAAA;AAAA;AAAA,EAIlB,MAAM;AAAA,IACJ,YAAY,OAAO,SAAc;AAC/B,aAAO,MAAM,OAAO,UAAU,QAAQ,EAAE,OAAO,EAAE,QAAQ,KAAK;AAAA;AAAA;AAAA;AAMpE,OAAO,UAAU,EAAE,UAAU,QAAQ;",
  "names": []
}
