{
  "version": 3,
  "sources": ["../../entities/worldUser.ts"],
  "sourcesContent": ["const { DataTypes } = require('sequelize');\n\nconst typeDefs = `\n  type WorldUser {\n    id: ID!\n    userId: ID!\n    user: User!\n    worldId: ID!\n    world: World!\n    lastVisited: Float!\n  }\n`;\n\nconst define = sequelize => sequelize.define('worldUser', {\n  id: {\n    primaryKey: true,\n    type: DataTypes.INTEGER,\n    allowNull: false,\n    autoIncrement: true,\n  },\n  lastVisited: {\n    type: DataTypes.BIGINT,\n    allowNull: false,\n    defaultValue: (new Date()).getTime()\n  },\n});\n\nconst resolvers = models => ({\n  WorldUser: {\n    user: async (worldUser: any) => {\n      return await models.user.findOne({where: {id: worldUser.userId}});\n    },\n    world: async (worldUser: any) => {\n      return await models.world.findOne({where: {id: worldUser.worldId}});\n    }\n  }\n});\n\nmodule.exports = { typeDefs, define, resolvers };"],
  "mappings": "AAAA,MAAM,EAAE,cAAc,QAAQ;AAE9B,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWjB,MAAM,SAAS,eAAa,UAAU,OAAO,aAAa;AAAA,EACxD,IAAI;AAAA,IACF,YAAY;AAAA,IACZ,MAAM,UAAU;AAAA,IAChB,WAAW;AAAA,IACX,eAAe;AAAA;AAAA,EAEjB,aAAa;AAAA,IACX,MAAM,UAAU;AAAA,IAChB,WAAW;AAAA,IACX,cAAe,IAAI,OAAQ;AAAA;AAAA;AAI/B,MAAM,YAAY,YAAW;AAAA,EAC3B,WAAW;AAAA,IACT,MAAM,OAAO,cAAmB;AAC9B,aAAO,MAAM,OAAO,KAAK,QAAQ,EAAC,OAAO,EAAC,IAAI,UAAU;AAAA;AAAA,IAE1D,OAAO,OAAO,cAAmB;AAC/B,aAAO,MAAM,OAAO,MAAM,QAAQ,EAAC,OAAO,EAAC,IAAI,UAAU;AAAA;AAAA;AAAA;AAK/D,OAAO,UAAU,EAAE,UAAU,QAAQ;",
  "names": []
}
