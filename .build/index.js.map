{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["// https://api.elephantsql.com/console/22b867f3-f91d-4cc1-a98f-0ca00c11f316/browser\n\nconst http = require('http');\nconst express = require('express');\nconst cors = require('cors');\nconst sockets = require('socket.io');\n\nconst { ApolloServer } = require('apollo-server-express');\nconst { ApolloServerPluginDrainHttpServer } = require('apollo-server-core');\nconst { WebSocketServer } = require('ws');\nconst { useServer } = require('graphql-ws/lib/use/ws');\n\nconst socketService = require('./services/socketService');\n\nconst { schema, seedDatabase } = require('./schema');\n\n// ---- express ----\nconst app = express();\napp.use(cors());\napp.get('/', async (req: any, res: any) => {\n  res.send('Hello world');\n});\n\n// ---- http ----\nconst httpServer = http.createServer(app);\n\n// ---- sockets ----\nconst io = sockets(httpServer, {\n  cors: {\n    origin: '*',\n    methods: ['GET', 'POST']\n  },\n});\n\n// ---- graphQL ----\n// const wsServer = new WebSocketServer({\n//   server: httpServer,\n//   path: '/subscriptions',\n// });\n// const serverCleanup = useServer({ schema }, wsServer);\nconst server = new ApolloServer({\n  schema,\n  csrfPrevention: false,\n  plugins: [\n    ApolloServerPluginDrainHttpServer({ httpServer }),\n    // {\n    //   async serverWillStart() {\n    //     return {\n    //       async drainServer() {\n    //         await serverCleanup.dispose();\n    //       }\n    //     }\n    //   }\n    // }\n  ]\n});\n\n// ---- seed? & listen ----\n(async () => {\n  if (true) await seedDatabase();\n  \n  await server.start();\n  server.applyMiddleware({ app });\n\n  await new Promise(resolve => httpServer.listen({ port: 4000 }, resolve));\n  \n  socketService.init(io);\n})();\n\n\n"],
  "mappings": "AAEA,MAAM,OAAO,QAAQ;AACrB,MAAM,UAAU,QAAQ;AACxB,MAAM,OAAO,QAAQ;AACrB,MAAM,UAAU,QAAQ;AAExB,MAAM,EAAE,iBAAiB,QAAQ;AACjC,MAAM,EAAE,sCAAsC,QAAQ;AACtD,MAAM,EAAE,oBAAoB,QAAQ;AACpC,MAAM,EAAE,cAAc,QAAQ;AAE9B,MAAM,gBAAgB,QAAQ;AAE9B,MAAM,EAAE,QAAQ,iBAAiB,QAAQ;AAGzC,MAAM,MAAM;AACZ,IAAI,IAAI;AACR,IAAI,IAAI,KAAK,OAAO,KAAU,QAAa;AACzC,MAAI,KAAK;AAAA;AAIX,MAAM,aAAa,KAAK,aAAa;AAGrC,MAAM,KAAK,QAAQ,YAAY;AAAA,EAC7B,MAAM;AAAA,IACJ,QAAQ;AAAA,IACR,SAAS,CAAC,OAAO;AAAA;AAAA;AAUrB,MAAM,SAAS,IAAI,aAAa;AAAA,EAC9B;AAAA,EACA,gBAAgB;AAAA,EAChB,SAAS;AAAA,IACP,kCAAkC,EAAE;AAAA;AAAA;AAcxC,AAAC,aAAY;AACX,MAAI;AAAM,UAAM;AAEhB,QAAM,OAAO;AACb,SAAO,gBAAgB,EAAE;AAEzB,QAAM,IAAI,QAAQ,aAAW,WAAW,OAAO,EAAE,MAAM,OAAQ;AAE/D,gBAAc,KAAK;AAAA;",
  "names": []
}
