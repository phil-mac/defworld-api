{
  "version": 3,
  "sources": ["../../../services/socketService/index.ts"],
  "sourcesContent": ["const { Text } = require('@codemirror/state');\nconst nodeInit = require('./node');\nconst worldInit = require('./world');\nconst { models } = require('../../schema');\n\nconst init = (io) => {\n  const nodes = {};\n  const worlds = {};\n\n  async function getNode (nodeId) {\n    if (!(nodeId in nodes)) {\n      // get content from database\n      \n      const node = await models.node.findOne({ where: { id: nodeId } });\n\n      const content = node.toJSON().content;\n\n      console.log(\"got node content from db: \", content);\n    \n      nodes[nodeId] = { \n        updates: [], \n        pending: [],\n        doc: Text.of([content]),\n        // doc: Text.of(['']),\n        users: {}\n      };\n    }\n    \n    return nodes[nodeId];\n  }\n\n  async function getWorld (worldId) {\n    if (!(worldId in worlds)) {\n      const world = await models.world.findOne({ where: { id: worldId }});\n      const grid = world.toJSON().grid; // [ [1,1], [2,2] ]      \n      \n      worlds[worldId] = {\n         users: {},\n         grid\n       }\n    }\n    return worlds[worldId];\n  }\n  \n  io.on('connection', socket => {\n    socket.emit('ack', 'Welcome to the socket, client.')\n    console.log('client connected to socket');\n\n    worldInit(io, socket, getWorld);\n    nodeInit(io, socket, getNode, getWorld);\n\n    socket.on('disconnect', () => {\n      console.log('client disconnected')\n    })\n  });\n};\n\nmodule.exports = { init };"],
  "mappings": "AAAA,MAAM,EAAE,SAAS,QAAQ;AACzB,MAAM,WAAW,QAAQ;AACzB,MAAM,YAAY,QAAQ;AAC1B,MAAM,EAAE,WAAW,QAAQ;AAE3B,MAAM,OAAO,CAAC,OAAO;AACnB,QAAM,QAAQ;AACd,QAAM,SAAS;AAEf,yBAAwB,QAAQ;AAC9B,QAAI,CAAE,WAAU,QAAQ;AAGtB,YAAM,OAAO,MAAM,OAAO,KAAK,QAAQ,EAAE,OAAO,EAAE,IAAI;AAEtD,YAAM,UAAU,KAAK,SAAS;AAE9B,cAAQ,IAAI,8BAA8B;AAE1C,YAAM,UAAU;AAAA,QACd,SAAS;AAAA,QACT,SAAS;AAAA,QACT,KAAK,KAAK,GAAG,CAAC;AAAA,QAEd,OAAO;AAAA;AAAA;AAIX,WAAO,MAAM;AAAA;AAGf,0BAAyB,SAAS;AAChC,QAAI,CAAE,YAAW,SAAS;AACxB,YAAM,QAAQ,MAAM,OAAO,MAAM,QAAQ,EAAE,OAAO,EAAE,IAAI;AACxD,YAAM,OAAO,MAAM,SAAS;AAE5B,aAAO,WAAW;AAAA,QACf,OAAO;AAAA,QACP;AAAA;AAAA;AAGL,WAAO,OAAO;AAAA;AAGhB,KAAG,GAAG,cAAc,YAAU;AAC5B,WAAO,KAAK,OAAO;AACnB,YAAQ,IAAI;AAEZ,cAAU,IAAI,QAAQ;AACtB,aAAS,IAAI,QAAQ,SAAS;AAE9B,WAAO,GAAG,cAAc,MAAM;AAC5B,cAAQ,IAAI;AAAA;AAAA;AAAA;AAKlB,OAAO,UAAU,EAAE;",
  "names": []
}
