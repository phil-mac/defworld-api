{
  "version": 3,
  "sources": ["../../../services/socketService/index.ts"],
  "sourcesContent": ["const worldInit = require('./world');\nconst nodeInit = require('./node');\nconst { models } = require('../../schema');\n\nconst init = (io) => {\n  const nodes = {};\n\n  async function getNode (nodeId) {\n    if (!(nodeId in nodes)) {\n      // get content from database\n      \n      const node = await models.node.findOne({ where: { id: nodeId } });\n\n      const content = node.toJSON().content;\n\n      console.log(\"got node content from db: \", content);\n    \n      nodes[nodeId] = { \n        revLog: [], \n        pendingOps: [], \n        users: {},\n        content \n      };\n    }\n    \n    return nodes[nodeId];\n  }\n  \n  io.on('connection', socket => {\n    socket.emit('ack', 'Welcome to the socket, client.')\n    console.log('client connected to socket');\n\n    worldInit(socket);\n    nodeInit(socket, getNode);\n\n    socket.on('disconnect', () => {\n      console.log('client disconnected')\n    })\n  });\n};\n\nmodule.exports = { init };"],
  "mappings": "AAAA,MAAM,YAAY,QAAQ;AAC1B,MAAM,WAAW,QAAQ;AACzB,MAAM,EAAE,WAAW,QAAQ;AAE3B,MAAM,OAAO,CAAC,OAAO;AACnB,QAAM,QAAQ;AAEd,yBAAwB,QAAQ;AAC9B,QAAI,CAAE,WAAU,QAAQ;AAGtB,YAAM,OAAO,MAAM,OAAO,KAAK,QAAQ,EAAE,OAAO,EAAE,IAAI;AAEtD,YAAM,UAAU,KAAK,SAAS;AAE9B,cAAQ,IAAI,8BAA8B;AAE1C,YAAM,UAAU;AAAA,QACd,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,OAAO;AAAA,QACP;AAAA;AAAA;AAIJ,WAAO,MAAM;AAAA;AAGf,KAAG,GAAG,cAAc,YAAU;AAC5B,WAAO,KAAK,OAAO;AACnB,YAAQ,IAAI;AAEZ,cAAU;AACV,aAAS,QAAQ;AAEjB,WAAO,GAAG,cAAc,MAAM;AAC5B,cAAQ,IAAI;AAAA;AAAA;AAAA;AAKlB,OAAO,UAAU,EAAE;",
  "names": []
}
