{
  "version": 3,
  "sources": ["../../../services/socketService/world.ts"],
  "sourcesContent": ["function worldInit(io, socket, getWorld) {\n  socket.on('joinWorld', async ({name, worldId}) => {\n    socket.join(`world-${worldId}`);\n    const world = await getWorld(worldId);\n    const init = {\n      grid: world.grid, \n    }\n    socket.emit('initWorldGrid', init);\n    joinWorld(worldId, name, world);\n  });\n\n  function joinWorld(worldId, name, world) {\n    const room = `world-${worldId}`;\n    socket.emit('initWorldUsers', {users: world.users});\n\n    const user = {username: name, id: 42};\n    \n    world.users[name] = user;\n    console.log(name + ' joined world of id: ' + worldId);\n    console.log('user list: ', world.users);\n\n    socket.in(room).emit('userJoined', {user});\n    io.in(room).emit('newMessage', {\n      message: name + ' joined the world',\n      id: Math.floor(Math.random() * 100000),\n    });\n\n    socket.on('message', message => {\n      console.log('new message: ' + message);\n      io.in(room).emit('newMessage', message);\n    });\n    \n    socket.on('disconnect', () => {\n      console.log('client \"' + name + '\" disconnected from socket, for world stuff');\n      console.log({user})\n      socket.in(room).emit('userLeft', {user});\n      io.in(room).emit('newMessage', {\n        message: name + ' left the world',\n        id: Math.floor(Math.random() * 100000),\n      });\n      delete world.users[name];\n      console.log('user list: ', world.users);\n    })\n  }\n\n}\nmodule.exports = worldInit;"],
  "mappings": "AAAA,mBAAmB,IAAI,QAAQ,UAAU;AACvC,SAAO,GAAG,aAAa,OAAO,EAAC,MAAM,cAAa;AAChD,WAAO,KAAK,SAAS;AACrB,UAAM,QAAQ,MAAM,SAAS;AAC7B,UAAM,OAAO;AAAA,MACX,MAAM,MAAM;AAAA;AAEd,WAAO,KAAK,iBAAiB;AAC7B,cAAU,SAAS,MAAM;AAAA;AAG3B,qBAAmB,SAAS,MAAM,OAAO;AACvC,UAAM,OAAO,SAAS;AACtB,WAAO,KAAK,kBAAkB,EAAC,OAAO,MAAM;AAE5C,UAAM,OAAO,EAAC,UAAU,MAAM,IAAI;AAElC,UAAM,MAAM,QAAQ;AACpB,YAAQ,IAAI,OAAO,0BAA0B;AAC7C,YAAQ,IAAI,eAAe,MAAM;AAEjC,WAAO,GAAG,MAAM,KAAK,cAAc,EAAC;AACpC,OAAG,GAAG,MAAM,KAAK,cAAc;AAAA,MAC7B,SAAS,OAAO;AAAA,MAChB,IAAI,KAAK,MAAM,KAAK,WAAW;AAAA;AAGjC,WAAO,GAAG,WAAW,aAAW;AAC9B,cAAQ,IAAI,kBAAkB;AAC9B,SAAG,GAAG,MAAM,KAAK,cAAc;AAAA;AAGjC,WAAO,GAAG,cAAc,MAAM;AAC5B,cAAQ,IAAI,aAAa,OAAO;AAChC,cAAQ,IAAI,EAAC;AACb,aAAO,GAAG,MAAM,KAAK,YAAY,EAAC;AAClC,SAAG,GAAG,MAAM,KAAK,cAAc;AAAA,QAC7B,SAAS,OAAO;AAAA,QAChB,IAAI,KAAK,MAAM,KAAK,WAAW;AAAA;AAEjC,aAAO,MAAM,MAAM;AACnB,cAAQ,IAAI,eAAe,MAAM;AAAA;AAAA;AAAA;AAKvC,OAAO,UAAU;",
  "names": []
}
