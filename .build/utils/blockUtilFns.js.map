{
  "version": 3,
  "sources": ["../../utils/blockUtilFns.ts"],
  "sourcesContent": ["import { colorToId } from \"./cssColors\";\n\nexport const gridSideLength = 64;\n\nexport function indexFromCoords([x, y, z]: number[]) {\n  console.log({gridSideLength})\n  return x + (gridSideLength * z) + (gridSideLength * gridSideLength * y);\n}\n\nexport function addNodeToBlocks (blocks: Record<number, {}>, nodeId: number, pos: number[]) {\n  const nodeIndex = indexFromCoords(pos);\n  console.log({nodeIndex})\n  blocks[nodeIndex] = [nodeId, 500];\n  const blocksToAdd = {};\n  blocksToAdd[nodeIndex] = [nodeId, 500];\n  return blocksToAdd;\n}\n\nexport function addNewBlocksToBlocks (\n  blocks: Record<number, {}>, \n  nodeId: number,\n  nodePos: number[],\n  newBlocks: {x: number, y: number, z: number, color: string}[]\n) {\n  const addedBlocks = {};\n  newBlocks.forEach(block => {\n    const x = nodePos[0] + block.x;\n    const y = nodePos[1] + block.y;\n    const z = nodePos[2] + block.z;\n    const index = indexFromCoords([x, y, z]);\n\n    const colorId = !!block.color ? colorToId(block.color) : -1;\n    if (!blocks[index]) {\n      blocks[index] = [nodeId, colorId];\n      addedBlocks[index] = [nodeId, colorId];\n    }\n  });\n  return addedBlocks;\n}\n\nexport function removeBlocksFromBlocks(\n  blocks: Record<number, {}>, \n  nodeIdOfBlocksToRemove: number\n) {\n  for (let index in blocks) {\n    if (blocks[index][0] === nodeIdOfBlocksToRemove && blocks[index][1] !== 500) {\n      delete blocks[index];\n    }\n  }\n}\n\nexport function removeNodeFromBlocks (blocks: Record<number, {}>, nodePos: number[],) {\n  const nodeIndex = indexFromCoords(nodePos);\n  delete blocks[nodeIndex];\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0B;AAEnB,MAAM,iBAAiB;AAEvB,yBAAyB,CAAC,GAAG,GAAG,IAAc;AACnD,UAAQ,IAAI,EAAC;AACb,SAAO,IAAK,iBAAiB,IAAM,iBAAiB,iBAAiB;AAAA;AAGhE,yBAA0B,QAA4B,QAAgB,KAAe;AAC1F,QAAM,YAAY,gBAAgB;AAClC,UAAQ,IAAI,EAAC;AACb,SAAO,aAAa,CAAC,QAAQ;AAC7B,QAAM,cAAc;AACpB,cAAY,aAAa,CAAC,QAAQ;AAClC,SAAO;AAAA;AAGF,8BACL,QACA,QACA,SACA,WACA;AACA,QAAM,cAAc;AACpB,YAAU,QAAQ,WAAS;AACzB,UAAM,IAAI,QAAQ,KAAK,MAAM;AAC7B,UAAM,IAAI,QAAQ,KAAK,MAAM;AAC7B,UAAM,IAAI,QAAQ,KAAK,MAAM;AAC7B,UAAM,QAAQ,gBAAgB,CAAC,GAAG,GAAG;AAErC,UAAM,UAAU,CAAC,CAAC,MAAM,QAAQ,gCAAU,MAAM,SAAS;AACzD,QAAI,CAAC,OAAO,QAAQ;AAClB,aAAO,SAAS,CAAC,QAAQ;AACzB,kBAAY,SAAS,CAAC,QAAQ;AAAA;AAAA;AAGlC,SAAO;AAAA;AAGF,gCACL,QACA,wBACA;AACA,WAAS,SAAS,QAAQ;AACxB,QAAI,OAAO,OAAO,OAAO,0BAA0B,OAAO,OAAO,OAAO,KAAK;AAC3E,aAAO,OAAO;AAAA;AAAA;AAAA;AAKb,8BAA+B,QAA4B,SAAoB;AACpF,QAAM,YAAY,gBAAgB;AAClC,SAAO,OAAO;AAAA;",
  "names": []
}
